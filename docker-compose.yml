version: "3.7"

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    command: [ "/bin/sh", "-c", "set -eu && envsubst '$$DOMAIN, $$BACK_END' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g 'daemon off;'" ]
    environment:
      DOMAIN: ${DOMAIN}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf.template
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/nginx/options-ssl-nginx.conf:/etc/nginx/conf.d/options-ssl-nginx.conf
      - ./docker/nginx/ssl-dhparams.pem:/etc/nginx/conf.d/ssl-dhparams.pem
    networks:
      - qiwi-pay-network
    depends_on:
      - jwt-server

  certbot:
    image: certbot/dns-cloudflare
    restart: unless-stopped
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew --dns-cloudflare-credentials /cloudflare.ini; sleep 3d & wait $${!}; done;'"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "2"
    volumes:
      - ./docker/certbot/cloudflare.ini:/opt/cerbot/cloudflare.ini
      - ./docker/certbot/conf:/etc/letsencrypt
      - ./docker/certbot/www:/var/www/certbot

  jwt-server:
    build:
      context: jwt-server
      dockerfile: jwt.dockerfile
    container_name: jwt-server
    restart: always
    environment:
      - PORT=9096
      - AEROSPIKE_HOST=aerospike
      - AEROSPIKE_PORT=3000
      - PG_USER=root
      - PG_PASSWORD=root_pg
      - PG_HOST=pg_db
      - PG_DB=qiwi-pay
      - PG_USER_TABLE=users
      - PG_LOGIN_FIELD=login
    networks:
      - qiwi-pay-network
    depends_on:
      - aerospike

  pg_db:
    image: postgres:13.4
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root_pg
      - POSTGRES_DB=qiwi-pay
    volumes:
      - db_pg_qiwi:/var/lib/postgresql/data/
      - ./docker/pgsql/init.sql:/docker-entrypoint-initdb.d/init.sql
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "2"
    container_name: pg_db
    networks:
      - qiwi-pay-network

  aerospike:
    container_name: aerospike
    image: aerospike/aerospike-server
    restart: always
    networks:
      - qiwi-pay-network


networks:
  qiwi-pay-network:
    driver: bridge

volumes:
  db_pg_qiwi: